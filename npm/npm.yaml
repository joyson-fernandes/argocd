apiVersion: v1
kind: Namespace
metadata:
  name: nginx-proxy-manager
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: npm-data
  namespace: nginx-proxy-manager
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: npm-letsencrypt
  namespace: nginx-proxy-manager
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: npm-database
  namespace: nginx-proxy-manager
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-proxy-manager
  namespace: nginx-proxy-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-proxy-manager
  template:
    metadata:
      labels:
        app: nginx-proxy-manager
    spec:
      containers:
      - name: nginx-proxy-manager
        image: 'jc21/nginx-proxy-manager:latest'
        ports:
        - containerPort: 80
          name: http
        - containerPort: 81
          name: admin
        - containerPort: 443
          name: https
        env:
        - name: DB_MYSQL_HOST
          value: "nginx-proxy-manager-db"
        - name: DB_MYSQL_PORT
          value: "3306"
        - name: DB_MYSQL_USER
          value: "npm"
        - name: DB_MYSQL_PASSWORD
          value: "npm"
        - name: DB_MYSQL_NAME
          value: "npm"
        volumeMounts:
        - mountPath: /data
          name: data-volume
        - mountPath: /etc/letsencrypt
          name: letsencrypt-volume
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: npm-data
      - name: letsencrypt-volume
        persistentVolumeClaim:
          claimName: npm-letsencrypt
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-proxy-manager-db
  namespace: nginx-proxy-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-proxy-manager-db
  template:
    metadata:
      labels:
        app: nginx-proxy-manager-db
    spec:
      containers:
      - name: mariadb
        image: 'mariadb:latest'
        env:
        - name: MYSQL_DATABASE
          value: "npm"
        - name: MYSQL_USER
          value: "npm"
        - name: MYSQL_PASSWORD
          value: "npm"
        - name: MYSQL_ROOT_PASSWORD
          value: "npm-root-pwd"
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: db-volume
      volumes:
      - name: db-volume
        persistentVolumeClaim:
          claimName: npm-database
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-proxy-manager
  namespace: nginx-proxy-manager
spec:
  selector:
    app: nginx-proxy-manager
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: admin
    port: 81
    targetPort: 81
  - name: https
    port: 443
    targetPort: 443
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-proxy-manager-db
  namespace: nginx-proxy-manager
spec:
  selector:
    app: nginx-proxy-manager-db
  ports:
  - port: 3306
    targetPort: 3306
  type: NodePort
